import { getFirestore, collection, getDoc, addDoc, doc, setDoc } from 'https://www.gstatic.com/firebasejs/9.8.4/firebase-firestore-lite.js';
import { defaultPalettes } from './palettes.js';

var db;

export function initFirestore(app) {
    db = getFirestore(app);
}

export async function getCities() {
    try {
        const docRef = await setDoc(doc(db, "cities", "neew-city-id"), {
            first: "Ada",
            last: "Lovelace",
            born: 1815
        });
        console.log("Document written with ID: ", docRef);
    } catch (e) {
        console.error("Error adding document: ", e);
    }

}

export async function checkNewUserId(uid) {
    var docRef = doc(db, "users", uid);
    var docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
        return docSnap.data()
    }
    return false
}

export async function setupNewAccount(uid, user) {
    console.log("setting up new account")
    await setDoc(doc(db, "users", uid), {
        id: uid,
        name: user.displayName,
        email: user.email,
        createDate: Date.now()
    });
    for (let i = 0; i < defaultPalettes().length; i++) {
        const palette = defaultPalettes()[i];

        await setDoc(doc(db, "users/" + uid + "/palettes", palette.id), {
            id: palette.id,
            name: palette.name,
            colors: palette.colors
        });
    }
}


function createPaletteID() {
    var result = '';
    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var charactersLength = characters.length;
    for (var i = 0; i < 30; i++) {
        result += characters.charAt(Math.floor(Math.random() *
            charactersLength));
    }
    return "p-" + result;
}

export async function addDummyData(uid, user) {

    await setDoc(doc(db, "users/" + uid + "/BitShift", "asdf"), {
        "name": "Untitled Sprite",
        "width": 16,
        "height": 16,
        "created": 111,
        "lastModified": Date.now(),
        "fileVersion": "V0.1.0",
        "previewImage": "",
        "data": "eyJuYW1lIjoiZGVlZXIiLCJwYWxldHRlcyI6W3sidGl0bGUiOiJEZWZhdWx0IiwiY29sb3JzIjpbWzM2LDYxLDEyNiwyNTVdLFsyOCw2MSw5NiwyNTVdLFsxNyw5NiwxMDIsMjU1XSxbMzEsMTI2LDExOCwyNTVdLFs1MCwxNjYsMTM5LDI1NV0sWzIzLDIyMywxMjAsMjU1XSxbMTMsMjQ1LDEyNSwyNTVdLFsxLDI1NSwxNzAsMjU1XSxbMTQ1LDI1NSwyMzEsMjU1XSxbMjE3LDI1NSwyNTMsMjU1XSxbMTcwLDI0NywyNTUsMjU1XSxbMTQwLDIyMCwyNTUsMjU1XSxbMTE1LDE4MywyNTUsMjU1XSxbNzQsMTM3LDI1NSwyNTVdLFs0MSw2OSwyNTQsMjU1XSxbMzIsNTAsMTY0LDI1NV0sWzExOCw0MSwxOTUsMjU1XSxbMTc2LDM2LDEwNCwyNTVdLFsyMTAsMjQsODYsMjU1XSxbMjM3LDMxLDc2LDI1NV0sWzI1NSw3Nyw0NiwyNTVdLFsyNTUsMTQxLDg0LDI1NV0sWzI0OSwxOTIsMTMxLDI1NV0sWzI1NSwyNTEsMjE0LDI1NV0sWzI1NSwyNTUsMjU1LDI1NV0sWzE4MCwxNDAsMTA4LDI1NV0sWzE0MiwxMDQsNzMsMjU1XSxbOTksNTgsNDEsMjU1XSxbNzgsMzYsMjUsMjU1XSxbNDIsMTMsOSwyNTVdXX0seyJ0aXRsZSI6ImRvbnQgcmVtZW1iZXIiLCJjb2xvcnMiOltbOTEsMTY2LDExNywyNTVdLFsxMDcsMjAxLDEwOCwyNTVdLFsxNzEsMjIxLDEwMCwyNTVdLFsyNTIsMjM5LDE0MSwyNTVdLFsyNTUsMTg0LDEyMSwyNTVdLFsyMzQsOTgsOTgsMjU1XSxbMjA0LDY2LDk0LDI1NV0sWzE2Myw0MCw4OCwyNTVdLFsxMTcsMjMsODYsMjU1XSxbNTcsOSw3MSwyNTVdLFs5NywyNCw4MSwyNTVdLFsxMzUsNTMsODUsMjU1XSxbMTY2LDg1LDk1LDI1NV0sWzIwMSwxMTUsMTE1LDI1NV0sWzI0MiwxNzQsMTUzLDI1NV0sWzI1NSwxOTUsMjQyLDI1NV0sWzIzOCwxNDMsMjAzLDI1NV0sWzIxMiwxMTAsMTc5LDI1NV0sWzEzNSw2MiwxMzIsMjU1XSxbMzEsMTYsNDIsMjU1XSxbNzQsNDgsODIsMjU1XSxbMTIzLDg0LDEyOCwyNTVdLFsxNjYsMTMzLDE1OSwyNTVdLFsyMTcsMTg5LDIwMCwyNTVdLFsyNTUsMjU1LDI1NSwyNTVdLFsxNzQsMjI2LDI1NSwyNTVdLFsxNDEsMTgzLDI1NSwyNTVdLFsxMDksMTI4LDI1MCwyNTVdLFsxMzIsMTAxLDIzNiwyNTVdLFsxMzEsNzcsMTk2LDI1NV0sWzEyNSw0NSwxNjAsMjU1XSxbNzgsMjQsMTI0LDI1NV1dfSx7InRpdGxlIjoiQXN0cmFsYWUiLCJjb2xvcnMiOltbMjU1LDI0MSwxNzAsMjU1XSxbMjU1LDI0NywyMTksMjU1XSxbMjU1LDI1NSwyNTUsMjU1XSxbMjI0LDI1NCwyNTUsMjU1XSxbMTkzLDI0MCwyNTUsMjU1XSxbMTc0LDIyNCwyNDcsMjU1XSxbMTEzLDIxNSwyNTMsMjU1XSxbMjAsMTc1LDI1NSwyNTVdLFs1Nyw5NCwyNTUsMjU1XSxbODIsNjksMjI0LDI1NV0sWzcyLDU4LDE1MywyNTVdLFsxMjIsOTksMjQ2LDI1NV0sWzE1MCwxMzMsMjUxLDI1NV0sWzE4OCwxMzcsMjUyLDI1NV0sWzIxMiwxNTUsMjQzLDI1NV0sWzI1MywxNDIsMjQxLDI1NV0sWzI1NSwxNjksMjUxLDI1NV0sWzI1MywxOTEsMjU0LDI1NV0sWzI1NCwyMDUsMjU1LDI1NV0sWzI1MywyMzQsMjU0LDI1NV0sWzEwMywyMjgsMjU1LDI1NV0sWzk0LDI1NSwyNTQsMjU1XV19XSwiY3VyckNvbG9yIjpbMzEsMTYsNDIsMjU1XSwid2lkdGgiOjEyOCwiaGVpZ2h0IjoxMjgsImxheWVycyI6W3sibmFtZSI6IkxheWVyIDQiLCJpbmRleCI6MywiaWQiOiJhOWEzS1JINmZqIiwicHJldmlld0NhbnZhcyI6e30sInByZXZpZXdDVFgiOnt9LCJsYXllckVsZW1lbnQiOnt9LCJjYW52YXNFbGVtZW50Ijp7fSwiY3R4Ijp7fSwic2V0dGluZ3MiOnsidmlzaWJsZSI6dHJ1ZSwibG9ja2VkIjpmYWxzZX0sImRhdGEiOiJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUlBQUFBQ0FDQVlBQUFERFBtSExBQUFFZFVsRVFWUjRYdTJiVzI2WU1CUUZreDEwQi8zdi90ZlMvKzZnTzJpRlZGUkVBRCt3UGRjdytZa1VzQS9jR1d6enlPZUhQNit1d09lcno5NlQvMUNBbDB1Z0FBcnc4Z3E4L1BRZEFSVGc1UlY0K2VrN0FpaEF2d3A4Ly9ianoxSHZ2MzcvVkx4K1pTL3F1VG1JTGZROTZHV2I4SXY0ZE4rNXFRQm5nRmNwaE4rZFozRkFNd0d1NEF1K21NdXdCazBFRVA0d1hzMkRiZ3NnL09aTWhuYW9BRVBMSFMvc2xnQmUvZkdBbGg2UkFwUlc3R0g3NHdMNGJJQTFDaFhBNXdNcy9DWDlsZ0JMQnpYcmdDMTRSd0JXZ200Q3JISXN2OWNIUVVkWHZBSThXSUQxMU02R2V1R3o4SnRNQVZmVFFPcjB6dDRXN3R2NUtEbFZ5ZnJ0dDZlQTdWWGVDNVNMeFhyQXFaYk5CRGlhODFQaHBkdWRNa29ybHQ2L3FRRDdPWCs3QUV3ZlN0NGVTcEJYcDl5OXVnaXdEYi82UUNUM0lQZjdLVUZ0NWI2MjZ5N0FtUXpidjllc0haU2dqUVJEQlRnNzVQM2RRSTRRQ3ZBZ0FZNkcrSnoxZ3hMY2x5REVDSEExTWx5TkJncndjQUhXVzBzbHVBLzZySWZRSTBET1F5WkhnWHR5VENIQTFVaWdBQzhYSUdlYXVGZWlaN2VlWmdSd0ZPZ2pvZ0wwcWVzMHZVNGx3TmtvNERxZzNqY0ZxSy9kSTFvK1FnQVhndlV1VGlmQUVleWNMNHR5M2kvVWwzSGVsbE1MVVBLbDBKRWtTdEhnczNEQy9STHdWOGZYcWgraUJxMHlweG9CZWdIcjFXOHJTRDM3bVVhQUViZDZJeko2d3F6cGV3b0JSb0labVZVRHJIV2I4QUlRUUlqTTFtQnord3N0d0p0QTVBSnJ2WjhDdEs3b1pQMkZGY0NyZjR4SkNqQ216bUZURkNBc21qRUhGbElBaC84eDhKY1VCUmhYNjVCSkNoQVN5N2lEbWtxQU56K3o3NlhFTkFMVS9QL2crdTNBOHR0WHY4Y0tUU0hBMlFjZkthaTEwdlM2MmlMMisxZ0JhcVdKQ0tubk1VMGh3SFlvWDR0UmV2WG50dXRaN0loOVR5TkF6WHp1RkpCV2Jpb0IwcWZ6ZFEvdkhLNnI5bmdCYXFSNVU1dVFBcXpEL1hhZTkvRndIeTNEQ3JCZitLVVdmWDNLOC94ZVF3cXdYYndKdnErRW9RUnd3ZFlYOWxIdllRUndqaDhQZjBrTUlVQUUrQkdPZ1ZCQUFmNVZYUUVJL1FJVlh3RWdBZmFGdi9wWDc1NTNCQW9RUUlBVWhOVDIybFBvMVcvdDhZeHNoNjhCdHNWUGdVaHRMeTJjdDUwQjdnTE9wb0Q5WStBRmJxc3BRUEQvTDVWUUk4RDJDbTc5TkxCMWY2V2pUZFQ5Y1FHT1h2eXN4V294NUh1MVQvQTYrQXgwclFCZTdmbmpUZGdSWUlXZks0SFE4NkZ2OXd3aHdQN1Y3MzdCZHlXQlEzd2QrTFZWR0FGU3AzSDJnS2pWblVFcS82bmJweEhncVFEbzgxSUFtZ0NjcndBd0FEcGVBV2dDY0w0Q3dBRG9lQVdnQ2NENUNnQURvT01WZ0NZQTV5c0FESUNPVndDYUFKeXZBREFBT2w0QmFBSnd2Z0xBQU9oNEJhQUp3UGtLQUFPZzR4V0FKZ0RuS3dBTWdJNVhBSm9Bbks4QU1BQTZYZ0ZvQW5DK0FzQUE2SGdGb0FuQStRb0FBNkRqRllBbUFPY3JBQXlBamxjQW1nQ2Nyd0F3QURwZUFXZ0NjTDRDd0FEb2VBV2dDY0Q1Q2dBRG9PTVZnQ1lBNXlzQURJQ09Wd0NhQUp5dkFEQUFPbDRCYUFKd3ZnTEFBT2g0QmFBSndQa0tBQU9nNHhXQUpnRG5Ld0FNZ0k1WEFKb0FuSzhBTUFBNlhnRm9BbkMrQXNBQTZIZ0ZvQW5BK1FvQUE2RGovd0xyWDNTZk4zdFZ6Z0FBQUFCSlJVNUVya0pnZ2c9PSJ9LHsibmFtZSI6IkxheWVyIDIiLCJpbmRleCI6MiwiaWQiOiI1Z3NGbnRZdElnIiwicHJldmlld0NhbnZhcyI6e30sInByZXZpZXdDVFgiOnt9LCJsYXllckVsZW1lbnQiOnt9LCJjYW52YXNFbGVtZW50Ijp7fSwiY3R4Ijp7fSwic2V0dGluZ3MiOnsidmlzaWJsZSI6dHJ1ZSwibG9ja2VkIjpmYWxzZX0sImRhdGEiOiJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUlBQUFBQ0FDQVlBQUFERFBtSExBQUFCMFVsRVFWUjRYdTNVQVEwQUFBeURzTSsvNlFzcGN3QWgyelhhd0dqNjRLOEE4QWdLb0FCd0F6aCtEMUFBdUFFY3Z3Y29BTndBanQ4REZBQnVBTWZ2QVFvQU40RGo5d0FGZ0J2QThYdUFBc0FONFBnOVFBSGdCbkQ4SHFBQWNBTTRmZzlRQUxnQkhMOEhLQURjQUk3ZkF4UUFiZ0RIN3dFS0FEZUE0L2NBQllBYndQRjdnQUxBRGVENFBVQUI0QVp3L0I2Z0FIQURPSDRQVUFDNEFSeS9CeWdBM0FDTzN3TVVBRzRBeCs4QkNnQTNnT1AzQUFXQUc4RHhlNEFDd0EzZytEMUFBZUFHY1B3ZW9BQndBemgrRDFBQXVBRWN2d2NvQU53QWp0OERGQUJ1QU1mdkFRb0FONERqOXdBRmdCdkE4WHVBQXNBTjRQZzlRQUhnQm5EOEhxQUFjQU00Zmc5UUFMZ0JITDhIS0FEY0FJN2ZBeFFBYmdESDd3RUtBRGVBNC9jQUJZQWJ3UEY3Z0FMQURlRDRQVUFCNEFady9CNmdBSEFET0g0UFVBQzRBUnkvQnlnQTNBQ08zd01VQUc0QXgrOEJDZ0EzZ09QM0FBV0FHOER4ZTRBQ3dBM2crRDFBQWVBR2NQd2VvQUJ3QXpoK0QxQUF1QUVjdndjb0FOd0FqdDhERkFCdUFNZnZBUW9BTjREajl3QUZnQnZBOFh1QUFzQU40UGc5UUFIZ0JuRDhIcUFBY0FNNGZnOVFBTGdCSEw4SEtBRGNBSTdmQXhRQWJnREg3d0VLQURlQTQvY0FCWUFid1BGN0FEeUFCNlNQQUlGbTE5VTdBQUFBQUVsRlRrU3VRbUNDIn0seyJuYW1lIjoiTGF5ZXIgMSIsImluZGV4IjoxLCJpZCI6Ino0Z2FlQmhzRmQiLCJwcmV2aWV3Q2FudmFzIjp7fSwicHJldmlld0NUWCI6e30sImxheWVyRWxlbWVudCI6e30sImNhbnZhc0VsZW1lbnQiOnt9LCJjdHgiOnt9LCJzZXR0aW5ncyI6eyJ2aXNpYmxlIjp0cnVlLCJsb2NrZWQiOmZhbHNlfSwiZGF0YSI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBSUFBQUFDQUNBWUFBQUREUG1ITEFBQUIwVWxFUVZSNFh1M1VBUTBBQUF5RHNNKy82UXNwY3dBaDJ6WGF3R2o2NEs4QThBZ0tvQUJ3QXpoK0QxQUF1QUVjdndjb0FOd0FqdDhERkFCdUFNZnZBUW9BTjREajl3QUZnQnZBOFh1QUFzQU40UGc5UUFIZ0JuRDhIcUFBY0FNNGZnOVFBTGdCSEw4SEtBRGNBSTdmQXhRQWJnREg3d0VLQURlQTQvY0FCWUFid1BGN2dBTEFEZUQ0UFVBQjRBWncvQjZnQUhBRE9INFBVQUM0QVJ5L0J5Z0EzQUNPM3dNVUFHNEF4KzhCQ2dBM2dPUDNBQVdBRzhEeGU0QUN3QTNnK0QxQUFlQUdjUHdlb0FCd0F6aCtEMUFBdUFFY3Z3Y29BTndBanQ4REZBQnVBTWZ2QVFvQU40RGo5d0FGZ0J2QThYdUFBc0FONFBnOVFBSGdCbkQ4SHFBQWNBTTRmZzlRQUxnQkhMOEhLQURjQUk3ZkF4UUFiZ0RIN3dFS0FEZUE0L2NBQllBYndQRjdnQUxBRGVENFBVQUI0QVp3L0I2Z0FIQURPSDRQVUFDNEFSeS9CeWdBM0FDTzN3TVVBRzRBeCs4QkNnQTNnT1AzQUFXQUc4RHhlNEFDd0EzZytEMUFBZUFHY1B3ZW9BQndBemgrRDFBQXVBRWN2d2NvQU53QWp0OERGQUJ1QU1mdkFRb0FONERqOXdBRmdCdkE4WHVBQXNBTjRQZzlRQUhnQm5EOEhxQUFjQU00Zmc5UUFMZ0JITDhIS0FEY0FJN2ZBeFFBYmdESDd3RUtBRGVBNC9jQUJZQWJ3UEY3QUR5QUI2U1BBSUZtMTlVN0FBQUFBRWxGVGtTdVFtQ0MifSx7Im5hbWUiOiJMYXllciAzIiwiaW5kZXgiOjAsImlkIjoidmtoYUZQSklScCIsInByZXZpZXdDYW52YXMiOnt9LCJwcmV2aWV3Q1RYIjp7fSwibGF5ZXJFbGVtZW50Ijp7fSwiY2FudmFzRWxlbWVudCI6e30sImN0eCI6e30sInNldHRpbmdzIjp7InZpc2libGUiOnRydWUsImxvY2tlZCI6ZmFsc2V9LCJkYXRhIjoiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFJQUFBQUNBQ0FZQUFBRERQbUhMQUFBR3ZrbEVRVlI0WHUyY082NmROd3lFN1IwRWNKSFNmWnBzd0R2eCtyS1RiTUNOZTVjdUFuZ0hOblFSR1lLZ0J5VU5LZkkvNDg3MzZLZW9tVS9VNHp6ZXYrTy9sMWJnL1V1UG5vTi9Sd0JlSEFJQ1FBQmVYSUVYSHo0ckFBRjRjUVZlZlBpc0FBUkFSNEhQZjMvNFdVZis1OHQvQkU1SDd1Mm9jRU95OGFYWnJiOXRaOHdIb1FwQUFVaEcxN084OVRmb0NCanNTQUVJQUtNWlRnQ08vUG45c0ZZVmhRSFFXdDlwUHNiOEZLWGNVeUgzVXNjQWpFd21BRmdBa3ZGb1RkVUFRQ2VLa3pKbXBLd25XdGNqQURqNzdXQUtCUUNhVWp1Wi9mWkVBUHg2WTVKWkNVRHFFTFVSVkZrQ3BCVkE2MmhqNG9oeEo0OERRT3RZWSt5TFdYZVBBcUNjK2RKcVlhYTB3NDVLamRCVlUyVUpLQzh1V3U4SjVEV001c3RvcTNWQzZuWUVRRFo2dENFcFMzMjllVUVPUkNabHZGYmE3NjhjQXlDQm9DZDdEVWV2SFdySDY4WCtsVEllQW9CZENLUkNTTnQ1TVhpV2gzUUQzS3VReU1vSnFRQjV3SnBHYWNhZUdZWitmUWJBYUt4STg5TzRvQUJvZzRBZVBOcFlhYno2U0ZjLzExdnlOQ2FCQ2dBMUNQbi8vMzc3YzZyUnR4OWZoemxGaDJESHhKMW5wa0wvMzBBVmdKWE5YNmIrNHg5L3ZYMldzQWRDVkFCMlRkUWU3eFVBV21EVUo0SmNMV29RdEFXUnpweVZkcnM1N3o2M2twc2JBT3FrOCtCVFJZZ0VRZXRvdTNPTXRUQmZiUk80UXVDb2JROENLM0VrNDBBWlh2WmxPVDYzRmFEZVNLWWxvYXdFbGlLTmxpejB4N1NzeCtVZWdDeCt2UlJZQ3pXRFFGSXRadFV1dmI2elhKejBIUWFBWkhoWkJXNENJTm5SdDVhR2tWSFd4dWRjd2dDUUVyNEp3ZXoyTHVlWGhiMWw2R28xTUFFQXRWRzZCY0RNZkVsRldEWEdxcjBaQUsydmpPM01saElDN1dWZ1pQd01DaXNEVC91NUJrQjk3SkhDWUZrRldvQkZudTB0V0Z3QXNBcERQaEdzYkxSVzErVFMvS2ZNOWhBQVNHQklBSHo2K0gxYS9Yb2ZSeXNmbkgybmNXZVpRZTE1cGdNRU5EQ3BBSG1IdkRvTFd6Q2tHQzBBVmo2VzF0S3RobVYyd1RPcVBwRytJaDhHZ0d6YWJqbk9NN2xldzJzanMvSDFwVXlybldRQzdsUVFTVnhVR3pNQUVGV2dQR3VmVkpPV2VDTVFhaGhXeENjQWxWb25nbGp0d0ZIOW5JeDFCYktUdHFZVm9DempLek1ZWlloVUtFUi9FY3hQZWx3QllHVTVRSmdoTlg0WDBONW1kYlhmRysydkFTQ0Y0QVlBSjBaRXkvY3FBRE1Jb3BUUitvU3lzcnlkd0laNDlqb0F2WjE5dEprVUxkOE1qd3NBV2pNb3l1emZ2WmRBekY1RURGY0FSQ3VsMGMyL2Vnb1kwUnVsbkVhcFVpT3RXUUUyNitnVHpHY0YyREEvU25XU0RpMU1CYmdoZkQzTG56THJTemhDQUxEN1R0ekpwckx1TThXS2RMNS9WQVU0TWVNRW5pZk8rQm9NdHhWZzlHa2U2VXc4QVdkMlN5bWRZZDdiaFFDZ2QxczRFeGNCd0ZOTHY4dWJ3SExObHM3eUZRaFdZOTdZZU03R2czNDlUQVZBRDF3U2p3QklWRkpvNCtYNFJRQVV6SldFTElXL3RSUFAvZDdxWDZJVG9vMjdKZURrMklZUXBONkhFQUNrcW9KWVh0NWhZd1VRbUlWdTRtbTJFUUMwdTVONDNqWmNCTUFRZ05zenY5Vy9OeUMxN0hDeENmUUFRSDNqUndDMGtHdkVKUUNHWWxkZFhhOEFwZm10dS91Uk5LdFh1NzFZWEFMdUFmajJ3MC9sTjNKN3FiVGFhQUtROHJoZG1TeHNjVk1CV2hkQW83OGh6Si9kT1JBQUF3UmI5LzZ6YmsvTm54bGYzd2JPOG9uOHVwc0tVSXVJdmhLV21sN204UW9uZ2VzQXROWmFwUGs3eHBjVm9ENGVScDd0cmR3ZkNRQUtJRllBSTl4Nys0RGU3L1cwMHFwbk9tSURSd0NNQU1qTGdLUzczaStPbm00TVIxQnB4SmFNMWFLTml5VkF1dkZxWFJScG1zTUtZSUhnUmgrSThpN3BsZ0JJVkRKdVkyMktGV3pHTXY3dXp0MFNNQlBpQmdCUFBncUdCRUJ6M2U5ZFNGbjJPWnNFeU5jSndFUk42NHFETkZjU0t4UUFOOVpqQWlEQnlLak5MUUJtdnh4dU5IeVZic0pVZ0pzejBicnYxbjFIZGgrOUZ3a0ZBSHJ3MGltRkJtQms4Q2duamZFVEFDRUZ2ZVZuMTh4ZXR4b21qNFlZQWdDTHRmL0VTR3ZUaE15S21qMGFnQlZUV3lhdVBPOWxSb3RjTHhxWkFDQlpReEZpcnc0ZTBUN3k3RS9qM3dMZ0NXYjF4akF5MUdJcFFrQzVFbU1aQUluNXFGa3hFMXlTeTI1cExtUG44Y3p5V1JIZVM5dGxBRkNKbjVpSE9oT3ZucmNKQU1wOVFaeGRzVmZBUWxVcXdYRGNOcmxXQVhxS3JCallpa0ZUMTFoekIwQktmM2YycncyZHJiZFBBWlR1T1FxNHJBRFBrZGYvU0FpQWY0OVVNeVFBcXZMNkQwNEEvSHVrbWlFQlVKWFhmM0FDNE44ajFRd0pnS3E4L29NVEFQOGVxV1pJQUZUbDlSK2NBUGozU0RWREFxQXFyLy9nQk1DL1I2b1pFZ0JWZWYwSEp3RCtQVkxOa0FDb3l1cy9PQUh3NzVGcWhnUkFWVjcvd1FtQWY0OVVNeVFBcXZMNkQwNEEvSHVrbWlFQlVKWFhmM0FDNE44ajFRd0pnS3E4L29NVEFQOGVxV1pJQUZUbDlSK2NBUGozU0RWREFxQXFyLy9ndndCWTRuTE1LYlZXTUFBQUFBQkpSVTVFcmtKZ2dnPT0ifV19"
    });
}